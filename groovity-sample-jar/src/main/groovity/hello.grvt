/*******************************************************************************
 * Â© 2018 Disney | ABC Television Group
 *
 * Licensed under the Apache License, Version 2.0 (the "Apache License")
 * with the following modification; you may not use this file except in
 * compliance with the Apache License and the following modification to it:
 * Section 6. Trademarks. is deleted and replaced with:
 *
 * 6. Trademarks. This License does not grant permission to use the trade
 *     names, trademarks, service marks, or product names of the Licensor
 *     and its affiliates, except as required to comply with Section 4(c) of
 *     the License and to reproduce the content of the NOTICE file.
 *
 * You may obtain a copy of the Apache License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the Apache License with the above modification is
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the Apache License for the specific
 * language governing permissions and limitations under the Apache License.
 *******************************************************************************/
import java.util.concurrent.atomic.AtomicInteger
import javax.xml.bind.annotation.*

static web=[
	path:'/{type:(hello|goodbye)}',
	outputs:['application/json','application/xml'],
	charset:'UTF-8',
	method:'GET'
]

static args=[
	type: GreetingType.class,
	name: 'World'
]

static AtomicInteger counter = new AtomicInteger()

Greeting greeting = new Greeting();
greeting.greeting = type.greet(name);
greeting.letters = name.split("");
greeting.visitor = counter.incrementAndGet();
    		
write(value:greeting)

@XmlRootElement(name="greetingResponse")
@ModelOrder(['greeting','visitor','letters'])
class Greeting{
	String greeting;
	@XmlAttribute(name="visitCount")
	int visitor;
	@XmlElementWrapper
	@XmlElement(name="letter")
	String[] letters;
}

enum GreetingType{
	hello("Hello "),
	goodbye("Goodbye ");
	
	String prefix;
	GreetingType(String prefix) {
		this.prefix = prefix;
	}
	def greet(String name) {
		"${prefix}${name}"
	}
}