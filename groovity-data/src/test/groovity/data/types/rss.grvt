/*******************************************************************************
 * Â© 2018 Disney | ABC Television Group
 *
 * Licensed under the Apache License, Version 2.0 (the "Apache License")
 * with the following modification; you may not use this file except in
 * compliance with the Apache License and the following modification to it:
 * Section 6. Trademarks. is deleted and replaced with:
 *
 * 6. Trademarks. This License does not grant permission to use the trade
 *     names, trademarks, service marks, or product names of the Licensor
 *     and its affiliates, except as required to comply with Section 4(c) of
 *     the License and to reproduce the content of the NOTICE file.
 *
 * You may obtain a copy of the Apache License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the Apache License with the above modification is
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the Apache License for the specific
 * language governing permissions and limitations under the Apache License.
 *******************************************************************************/
public static conf = [
	source : 'http',
	ttl : '30',
	refresh : '15'
]


trait RssElement implements Model, Ingest{
	String title
	String link
	String description
	Map<String, Object> attributes = [:]
	
	boolean ingest(String key, Object value){
		if(key=='title' && value instanceof Collection){
			Collection c = (Collection) value
			title = c.isEmpty() ? null: c.first()
			return true
		}
		if(!put(key, value)){
			attributes.put(key, value)
		}
		true
	}
}

@ModelOrder('title')
class Item implements Ingest, RssElement{
	String guid
	Date pubDate
	
	boolean ingest(String key, Object value){
		if(key=='pubDate' && value instanceof String){
			pubDate = Date.parse("EEE', 'dd' 'MMM' 'yyyy' 'HH:mm:ss' 'Z", value)
			return true
		}
		RssElement.super.ingest(key,value)
	}
}

class Rss implements DataModel, Shared, RssElement{
	Item[] items

	boolean ingest(String k, Object v){
		if(k=='channel'){
			items = v.item.collect{ new Item().ingest(it) }.toArray(new Item[0])
			setTitle(v.title)
			setLink(v.link)
			setDescription(v.description)
			return true
		}
		RssElement.super.ingest(k, v)
	}
}

new Rss()