/*******************************************************************************
 * Â© 2018 Disney | ABC Television Group
 *
 * Licensed under the Apache License, Version 2.0 (the "Apache License")
 * with the following modification; you may not use this file except in
 * compliance with the Apache License and the following modification to it:
 * Section 6. Trademarks. is deleted and replaced with:
 *
 * 6. Trademarks. This License does not grant permission to use the trade
 *     names, trademarks, service marks, or product names of the Licensor
 *     and its affiliates, except as required to comply with Section 4(c) of
 *     the License and to reproduce the content of the NOTICE file.
 *
 * You may obtain a copy of the Apache License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the Apache License with the above modification is
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the Apache License for the specific
 * language governing permissions and limitations under the Apache License.
 *******************************************************************************/

def a = 1;
def b=2;
def asyncThreadName = ""
def future = { x, y -> async({
	log(info:"calculating ${x} ${y} ${Thread.currentThread().name}")
	asyncThreadName = Thread.currentThread().name
	x+y
})}(a,b)
a=2;
def error = null;
try{
await{
async(pool:1,timeout:1,{
	Thread.sleep(3000)
})
}
}
catch(Exception e){
	error = e.cause;
}
<~${future.get()} ${asyncThreadName - ~/-\d+/} <g:await>A<g:async>B</g:async>C<g:async>D<g:await>E<g:async>F</g:async>G<g:async>H</g:async>I</g:await>J</g:async>K</g:await> ${error?.class?.name}~>