/*******************************************************************************
 * Â© 2018 Disney | ABC Television Group
 *
 * Licensed under the Apache License, Version 2.0 (the "Apache License")
 * with the following modification; you may not use this file except in
 * compliance with the Apache License and the following modification to it:
 * Section 6. Trademarks. is deleted and replaced with:
 *
 * 6. Trademarks. This License does not grant permission to use the trade
 *     names, trademarks, service marks, or product names of the Licensor
 *     and its affiliates, except as required to comply with Section 4(c) of
 *     the License and to reproduce the content of the NOTICE file.
 *
 * You may obtain a copy of the Apache License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the Apache License with the above modification is
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the Apache License for the specific
 * language governing permissions and limitations under the Apache License.
 *******************************************************************************/
class Model1 implements Model{
	String name
	Model1 nested
}

def m1 = new Model1().putAll([name:'foo',nested:[name:'bar',nested:[name:'xyz']]])
//System.out.println(m1.toJsonString())
assert m1.nested.getClass() == Model1.class
assert m1.nested.nested.getClass() ==  Model1.class

class Model2 implements Model{
	String name
	Model2[] nested
}

def m2 = new Model2().putAll([name:'foo',nested:[[name:'bar',nested:[[name:'abc']]],[name:'xyz']]])
//System.out.println(m2.toJsonString())
assert m2.nested[0].getClass() == Model2.class
assert m2.nested[0].nested[0].getClass() == Model2.class

class Model3 implements Model{
	String name
	List<Model3> nested
}

def m3 = new Model3().putAll([name:'foo',nested:[[name:'bar',nested:[[name:'abc']]],[name:'xyz']]])
//System.out.println(m3.toJsonString())
assert m3.nested[0].getClass() == Model3.class
assert m3.nested[0].nested[0].getClass() == Model3.class

class Model4 implements Model{
	String name
	Map<String, Model4> nested
}

def m4 = new Model4().putAll([name:'foo',nested:[bar:[name:'xyz',nested:[abc:[name:'123']]]]])
//System.out.println(m4.toJsonString())
assert m4.nested.entrySet().first().value.getClass() == Model4.class
assert m4.nested.entrySet().first().value.nested.entrySet().first().value.getClass() == Model4.class