/*******************************************************************************
 * Â© 2018 Disney | ABC Television Group
 *
 * Licensed under the Apache License, Version 2.0 (the "Apache License")
 * with the following modification; you may not use this file except in
 * compliance with the Apache License and the following modification to it:
 * Section 6. Trademarks. is deleted and replaced with:
 *
 * 6. Trademarks. This License does not grant permission to use the trade
 *     names, trademarks, service marks, or product names of the Licensor
 *     and its affiliates, except as required to comply with Section 4(c) of
 *     the License and to reproduce the content of the NOTICE file.
 *
 * You may obtain a copy of the Apache License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the Apache License with the above modification is
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the Apache License for the specific
 * language governing permissions and limitations under the Apache License.
 *******************************************************************************/
import org.h2.jdbcx.JdbcDataSource;

static conf=[
	source:'sql',
	ttl:'10',
	refresh:'7',
	'sql.dataSource' : 'wagonDB',
	'sql.tableName':'wagon',
	'sql.dateCol':'modified'
]

static init(){
	def sqlLib = load('/groovity/sql')
	if(!sqlLib.isBound('wagonDB')){
		def wagonDB = new JdbcDataSource();
		wagonDB.url = "jdbc:h2:mem:testWagonDB;MODE=MySQL;DATABASE_TO_UPPER=false;DB_CLOSE_DELAY=-1";
		sqlLib.bind('wagonDB',wagonDB)
		sqlLib.init('wagonDB',
			'''CREATE TABLE wagon(
			id INT UNSIGNED NOT NULL AUTO_INCREMENT UNIQUE,
			ownerId INT UNSIGNED NOT NULL,
			numWheels INT NOT NULL,
			payload VARCHAR(255),
			destination VARCHAR(255),
			modified TIMESTAMP NOT NULL,
			PRIMARY KEY (id)
			)'''
		)
	}
}

trait Wheeled implements Model{
	int numWheels
}

trait Transport implements Model{
	int ownerId
	String payload
	String destination
	
}
class Wagon implements DataModel, Stored, HasRowId, Wheeled, Transport{
	Date modified
	
	Wagon store(){
		modified = new Date()
		HasRowId.super.store()
	}
}

new Wagon()