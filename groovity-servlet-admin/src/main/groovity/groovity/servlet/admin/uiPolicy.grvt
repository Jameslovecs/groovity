/*******************************************************************************
 * Â© 2018 Disney | ABC Television Group
 *
 * Licensed under the Apache License, Version 2.0 (the "Apache License")
 * with the following modification; you may not use this file except in
 * compliance with the Apache License and the following modification to it:
 * Section 6. Trademarks. is deleted and replaced with:
 *
 * 6. Trademarks. This License does not grant permission to use the trade
 *     names, trademarks, service marks, or product names of the Licensor
 *     and its affiliates, except as required to comply with Section 4(c) of
 *     the License and to reproduce the content of the NOTICE file.
 *
 * You may obtain a copy of the Apache License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the Apache License with the above modification is
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the Apache License for the specific
 * language governing permissions and limitations under the Apache License.
 *******************************************************************************/
static conf=[
	'groovity.servlet.admin.ui.policy':'/groovity/servlet/admin/uiPolicy',
	'groovity.cluster.username' : 'admin',
	'groovity.cluster.password' : String.class,
	'groovity.cluster.disableAuth' : false
]
static web = [
	auths:[
		[
			type:"digest",
			domain:"/groovity/servlet/admin/ui/",
			realm:"Groovity Servlet Admin UI",
			passwordDigester:{  user, realm ->
				if(conf['groovity.cluster.password']){
					return java.security.MessageDigest.getInstance("MD5").digest("${conf['groovity.cluster.username']}:${realm}:${conf['groovity.cluster.password']}".bytes);
				}
			}
		],
		{	request ->
			def rval = [authenticated:false,authorized:false]
			if(conf['groovity.cluster.disableAuth']){
				rval.authenticated = true;
				rval.authorized = true
			}
			rval
		}
	]
]
static init(){
	if(conf['groovity.servlet.admin.ui.policy'] != '/groovity/servlet/admin/uiPolicy'){
		return
	}
	if(!conf['groovity.cluster.disableAuth'] && !conf['groovity.cluster.password']){
		log(warn:"""
Groovity servlet admin unavailable, to enable access configure environment with

	-Dgroovity.cluster.disableAuth=true
			
OR

	-Dgroovity.cluster.password={password}
""")
	}
}
//runtime; return configured ui policy location
conf['groovity.servlet.admin.ui.policy']