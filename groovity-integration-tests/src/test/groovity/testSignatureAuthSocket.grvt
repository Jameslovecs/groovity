/*******************************************************************************
 * Â© 2018 Disney | ABC Television Group
 *
 * Licensed under the Apache License, Version 2.0 (the "Apache License")
 * with the following modification; you may not use this file except in
 * compliance with the Apache License and the following modification to it:
 * Section 6. Trademarks. is deleted and replaced with:
 *
 * 6. Trademarks. This License does not grant permission to use the trade
 *     names, trademarks, service marks, or product names of the Licensor
 *     and its affiliates, except as required to comply with Section 4(c) of
 *     the License and to reproduce the content of the NOTICE file.
 *
 * You may obtain a copy of the Apache License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the Apache License with the above modification is
 * distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the Apache License for the specific
 * language governing permissions and limitations under the Apache License.
 *******************************************************************************/
import java.util.concurrent.CompletableFuture
import java.util.concurrent.TimeUnit

static conf=[
	'groovity.port':int.class
]

def host = "localhost:${conf['groovity.port']}"

def ioe = null;
try{
	ws(url:"ws://${host}/ws/signatureAuth?soldier=buffalo", error:{ }){
		handler{ message ->
			
		}	
	}
}
catch(IOException e){
	ioe=e;
}

assert ioe.cause.responseStatusCode == 401
result = new CompletableFuture();
ws(
	var:'sock',
	url:"ws://${host}/ws/signatureAuth?soldier=buffalo",
	close:{ 
		result.complete('exodus')
	}
){
	header(name:"Origin",value:"http://${host}")
	signature(keyId:'marley',key:'Tm8gd29tYW4gbm8gY3J5')
	handler{ message ->
		sock.close()
		assert message == 'buffalo soldier, redemption marley'
	}
}
sock('redemption')
assert result.get(1,TimeUnit.SECONDS) == 'exodus'